Q1: Write a program to print the sum of all the elements present on even indices in the given array.
Input 1: arr[] = {3,20,4,6,9}
Output 1: 16
Input 1: arr[] = {4,3,6,7,1}
Output 1: 11
Ans:-public class EvenIndexSum {
    public static void main(String[] args) {
        int[] arr = {3, 20, 4, 6, 9};
        int sum = 0;
        for (int i = 0; i < arr.length; i += 2) {
            sum += arr[i];
        }
        System.out.println("Sum of elements on even indices: " + sum);
    }
}
Q2: Write a program to traverse over the elements of the array using for each loop and print all even
elements.
Input 1: arr[] = {34,21,54,65,43}
Output 1: 34 54
Input 1: arr[] = {4,3,6,7,1}
Output 1: 4 6
ANs:-public class PrintEvenElements {
    public static void main(String[] args) {
        int[] arr = {34, 21, 54, 65, 43};
        System.out.print("Even elements: ");
        for (int num : arr) {
            if (num % 2 == 0) {
                System.out.print(num + " ");
            }
        }
        System.out.println();
    }
}
Q3: Write a program to calculate the maximum element in the array.
Input 1: arr[] = {34,21,54,65,43}
Output 1: 65
Input 1: arr[] = {4,3,6,7,1}
Output 1: 7
Ans:-public class MaxElement {
    public static void main(String[] args) {
        int[] arr = {34, 21, 54, 65, 43};
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        System.out.println("Maximum element: " + max);
    }
}
Q4: Write a program to find out the second largest element in a given array.
Input 1: arr[] = {34,21,54,65,43}
Output 1: 54
Input 1: arr[] = {4,3,6,7,1}
Output 1: 6
Ans:-public class SecondLargestElement {
    public static void main(String[] args) {
        int[] arr = {34, 21, 54, 65, 43};
        int max = Integer.MIN_VALUE;
        int secondMax = Integer.MIN_VALUE;
        for (int num : arr) {
            if (num > max) {
                secondMax = max;
                max = num;
            } else if (num > secondMax && num != max) {
                secondMax = num;
            }
        }
        if (secondMax == Integer.MIN_VALUE) {
            System.out.println("There is no second largest element");
        } else {
            System.out.println("Second largest element: " + secondMax);
        }
    }
}
Q5: Given an array. Find the first peak element in the array. A peak element is an element that is greater than
its just left and just right neighbor.
Input 1: arr[] = {1,3,2,6,5}
Output 1: 6
Input 2: arr[] = {1 4,7,3,2,6,5}
Output 1: 7
Ans:-public class FirstPeakElement {
    public static void main(String[] args) {
        int[] arr = {1, 3, 2, 6, 5};
        int peak = findFirstPeak(arr);
        if (peak != -1) {
            System.out.println("First peak element: " + arr[peak]);
        } else {
            System.out.println("There is no peak element");
        }
    }

    private static int findFirstPeak(int[] arr) {
        if (arr.length == 1) {
            return 0;
        }
        if (arr[0] > arr[1]) {
            return 0;
        }
        if (arr[arr.length - 1] > arr[arr.length - 2]) {
            return arr.length - 1;
        }
        for (int i = 1; i < arr.length - 1; i++) {
            if (arr[i] > arr[i - 1] && arr[i] > arr[i + 1]) {
                return i;
            }
        }
        return -1;
    }
}